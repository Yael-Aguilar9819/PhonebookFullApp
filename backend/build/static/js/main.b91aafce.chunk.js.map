{"version":3,"sources":["components/SubmitButton.js","components/InputText.js","components/PersonForm.js","components/PersonInfo.js","components/FunctionButton.js","components/PeopleDisplay.js","services/numbersBackend.js","components/NotificationMessage.js","App.js","reportWebVitals.js","index.js","components/NotificationMessage.module.css","components/App.module.css"],"names":["SubmitButton","onClickFunc","text","type","onClick","InputText","functionControlChange","currentInputControl","textDisplay","value","onChange","formStyle","marginLeft","PersonForm","textInput1","textInput2","submitButton","style","PersonInfo","name","number","deleteButton","FunctionButton","maxHeight","PeopleDisplay","personsArray","deleteFunction","filterToSearch","filter","map","person","baseUrl","methodToBackendJsonResponse","url","method","objectToSend","a","fetch","headers","body","JSON","stringify","respFromServer","status","Error","json","getAll","resp","data","sendNewPersonInfo","personInfoObject","responseFromServer","deletePerson","personID","allFunctions","modifyPersonInfo","personObject","id","NotificationMessage","messageInfo","message","className","styles","positiveContainer","positiveMessage","negativeContainer","negativeMessage","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","nameToSearch","setNameToSearch","setMessageInfo","useEffect","personsInfoService","then","personsJson","catch","err","console","log","modifyPersonInfoInServerAndFront","newObjectPerson","indexOfName","newPersonsArray","slice","concat","showMessageForXSeconds","messageToShow","numberOfSeconds","meaning","setTimeout","mainContainer","event","target","preventDefault","findIndex","personName","toLowerCase","window","confirm","newPersons","length","elem","substr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b91aafce.chunk.js","sourcesContent":["const SubmitButton = ({onClickFunc, text}) => {\r\n    return (\r\n        <button type=\"submit\" onClick={onClickFunc}>{text}</button>\r\n    )\r\n};\r\n\r\nexport default SubmitButton","const InputText = ({functionControlChange, currentInputControl, textDisplay}) => {\r\n    return (\r\n    <div>\r\n        {textDisplay} <input value={currentInputControl} onChange={functionControlChange}/>\r\n    </div>\r\n    )\r\n};\r\nexport default InputText","const formStyle = {\r\n    marginLeft: 7\r\n};\r\n\r\nconst PersonForm = ({textInput1, textInput2, submitButton}) => {\r\n    return (\r\n        <form style={formStyle}>\r\n            {textInput1}\r\n            {textInput2}\r\n            <div>\r\n                {submitButton}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","const PersonInfo = ({name, number, deleteButton}) => {\r\n    return (\r\n        <div>\r\n            <p>{name} {number} {deleteButton}</p> \r\n        </div>\r\n    )\r\n}\r\nexport default PersonInfo","const FunctionButton = ({onClickFunc, text}) => {\r\n    const buttonStyle = {\r\n        marginLeft: 4,\r\n        maxHeight: 20\r\n    }\r\n\r\n    return (\r\n        <button style={buttonStyle} type=\"submit\" onClick={onClickFunc}>{text}</button>\r\n    )\r\n};\r\n\r\nexport default FunctionButton","import PersonName from './PersonInfo'\r\nimport FunctionButton from './FunctionButton.js'\r\n\r\n//This is the component that display the list, then it renders another component with the info of each person and a button \r\n//That deletes that person info, in-server and in frontend\r\nconst PeopleDisplay = ({personsArray, deleteFunction, filterToSearch}) => {\r\n    return (\r\n        <ul>\r\n        {personsArray.filter(filterToSearch()).map(person =>\r\n          <PersonName \r\n            key={person.name} \r\n            name={person.name} \r\n            number={person.number} \r\n            deleteButton={<FunctionButton onClickFunc={() => deleteFunction(person)} text={\"Delete\"}/>}\r\n            />)}\r\n      </ul>\r\n    )\r\n}\r\nexport default PeopleDisplay","// const baseUrl = \"http://localhost:3001/persons\"; the old baseUrl\r\nconst baseUrl = '/api/persons';\r\n\r\n//This is simply our abstraction layer to the backend, that's how we will comunicate to the backend, whataever it is\r\n//This downloads all the notes and sends them to the frontend, it's fired at the start of the page\r\nconst methodToBackendJsonResponse = async (url, method, objectToSend) => {\r\n    const respFromServer = await \r\n                        fetch(url, {\r\n                        method: method,\r\n                        headers: {\r\n                        'Content-Type': 'application/json'\r\n                        },\r\n                        body: JSON.stringify(objectToSend)\r\n                    })\r\n    //This guarantees the server response it's between 0 and 200\r\n    if (respFromServer.status - 200 >= 99) {\r\n        throw new Error(`cannot fetch data with error code: ${respFromServer.status}`);\r\n    }      \r\n    return respFromServer.json();\r\n}\r\n\r\nconst getAll = async () => {\r\n    const resp = await fetch(baseUrl);\r\n    if (resp.status !== 200) {\r\n        throw new Error(`cannot fetch data with error code: ${resp.status}`);\r\n    }  \r\n    const data = await resp.json();\r\n    return data;\r\n}\r\n\r\n\r\n//The simple POST method using async, restructured to make it easier to use\r\nconst sendNewPersonInfo = async (personInfoObject) => {\r\n    const responseFromServer = await methodToBackendJsonResponse(baseUrl, \"POST\", personInfoObject);\r\n    return responseFromServer;\r\n}\r\n\r\nconst deletePerson = async personID => {\r\n    const responseFromServer = await methodToBackendJsonResponse(`${baseUrl}/${personID}`, \"DELETE\", {personID});  \r\n    return responseFromServer;\r\n}\r\n\r\nconst modifyPersonInfo = async personObject => {\r\n    const responseFromServer = await methodToBackendJsonResponse(`${baseUrl}/${personObject.id}`, \"PUT\", personObject);  \r\n    return responseFromServer;\r\n}\r\n\r\n//Cleaner with object initializer ES2015\r\nconst allFunctions = {\r\n    getAll,\r\n    sendNewPersonInfo,\r\n    modifyPersonInfo,\r\n    deletePerson\r\n}\r\n\r\nexport default allFunctions;","import styles from \"./NotificationMessage.module.css\"\r\nconst NotificationMessage = ({messageInfo}) => {\r\n  const {message, status} = messageInfo\r\n  if (message === null) {\r\n    return (\r\n      null\r\n    )\r\n  }\r\n\r\n  else if (status === \"positive\") {\r\n    return (\r\n      <div className={styles.positiveContainer}>\r\n        <h2 className={styles.positiveMessage}>{message}</h2>\r\n      </div>\r\n    )  \r\n  }\r\n\r\n\r\n  //If it's not positive, it will return the negative response\r\n  return (\r\n    <div className={styles.negativeContainer}>\r\n      <h2 className={styles.negativeMessage}>{message}</h2>\r\n    </div>\r\n  )  \r\n\r\n\r\n  \r\n};\r\nexport default NotificationMessage","import { useState, useEffect } from 'react';\r\nimport styles from './components/App.module.css'\r\nimport SubmitButton from './components/SubmitButton'\r\nimport InputText from './components/InputText'\r\nimport PersonForm from './components/PersonForm'\r\nimport PeopleDisplay from './components/PeopleDisplay'\r\nimport personsInfoService from './services/numbersBackend'\r\nimport NotificationMessage from './components/NotificationMessage';\r\n\r\n//This is the main App, when the logic lives\r\nconst App = () => {\r\n  const [ persons, setPersons ] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')  \r\n  const [ nameToSearch, setNameToSearch ] = useState('')\r\n  const [ messageInfo, setMessageInfo ] = useState({message:null})\r\n\r\n  \r\n  //This is how the app starts, fetching all the persons info \r\n  useEffect(() => {\r\n    personsInfoService.getAll()\r\n      .then(personsJson => setPersons(personsJson))\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n  //This is using the controlled-component approach\r\n  const handleSearchBoxChange = event => {\r\n    setNameToSearch(event.target.value)\r\n  }\r\n\r\n  const handleNameChange = event => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = event => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  //It's the same as before, just added the server communication \r\n  const addPerson = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newObjectPerson = {\r\n      name : newName,\r\n      number : newNumber\r\n    }\r\n\r\n    //Normalized to lowercase\r\n    const indexOfName = persons.findIndex(personName => personName.name.toLowerCase() === newName.toLowerCase())\r\n\r\n    //If it's different than -1, it means that it doesnt exit in the list\r\n    if (indexOfName !== -1) {\r\n      const userConfirmation = window.confirm(`${newObjectPerson.name} is already added to phonebook, replace the old number with a new one?`)\r\n      if (userConfirmation === false) return 0\r\n\r\n      newObjectPerson.id = persons[indexOfName].id;\r\n      modifyPersonInfoInServerAndFront(newObjectPerson, indexOfName, persons);\r\n    } else {\r\n      //Changed this, so the personObject will have the ID from the start\r\n      personsInfoService.sendNewPersonInfo(newObjectPerson)\r\n        .then(resp => {\r\n          newObjectPerson.id = resp.id\r\n          showMessageForXSeconds(`Added ${newObjectPerson.name}.`, 2, \"positive\")\r\n        })\r\n      setPersons(persons.concat(newObjectPerson))\r\n    }\r\n    setNewName(\"\")\r\n    setNewNumber(\"\")\r\n  }\r\n\r\n  \r\n  const modifyPersonInfoInServerAndFront = (newObjectPerson, indexOfName, personsArray) => {\r\n    //doing it the inmutable way\r\n    const newPersonsArray = personsArray.slice(0, indexOfName)\r\n      .concat(newObjectPerson)\r\n      .concat(personsArray.slice(indexOfName + 1))\r\n    \r\n      personsInfoService.modifyPersonInfo(newObjectPerson)\r\n      .then(resp =>  console.log(resp))\r\n    setPersons(newPersonsArray)\r\n  }\r\n\r\n  //This functions controls the component and the info that goes inside\r\n  //Meaning its about if its neagtive or positive, trying to find a better name\r\n  const showMessageForXSeconds = (messageToShow, numberOfSeconds, meaning) => {\r\n    setMessageInfo({\r\n      message: messageToShow, status: meaning\r\n    });\r\n\r\n    setTimeout(() => setMessageInfo({message:null}), numberOfSeconds*1500);\r\n  }\r\n\r\n  //This functions deletes person info,\r\n  const deletePerson = (personObject) => {\r\n    const userConfirmation = window.confirm(`Delete ${personObject.name}?`)\r\n    //will suspend the funciton if the user says simply no\r\n    if (!userConfirmation) return 0;\r\n\r\n    personsInfoService.deletePerson(personObject.id)\r\n      .then(resp => console.log(`Success deleting ${personObject.name}!`))\r\n      .catch(err => {\r\n        showMessageForXSeconds(`Information of ${personObject.name} has already been removed from server.`, 3, \"negative\")\r\n        console.log(err)})\r\n\r\n    const newPersons = persons.filter(person => person.id !== personObject.id);\r\n    setPersons(newPersons);\r\n  }\r\n\r\n  const falseIfStringEmpty = str => str.length === 0 ? false : true\r\n\r\n  //This is the filter to the person part\r\n  const filterToSearch = () => {\r\n    if (!falseIfStringEmpty(nameToSearch)) return elem => elem\r\n\r\n    return elem => elem.name.toLowerCase().substr(0, nameToSearch.length) === nameToSearch.toLowerCase();\r\n  }\r\n\r\n\r\n  //The main app application rendering everything\r\n  return (\r\n    <div className={styles.mainContainer}>\r\n      <h2>Phonebook</h2>\r\n      <NotificationMessage messageInfo={messageInfo}/>\r\n      <InputText functionControlChange={handleSearchBoxChange} currentInputControl={nameToSearch} textDisplay={\"Filter shown with\"}/>      \r\n      <h2>Add a new person contact info</h2>\r\n      <PersonForm\r\n        textInput1={<InputText functionControlChange={handleNameChange} currentInputControl={newName} textDisplay={\"name\"}/>} \r\n        textInput2={<InputText functionControlChange={handleNumberChange} currentInputControl={newNumber} textDisplay={\"number\"}/>} \r\n        submitButton={<SubmitButton onClickFunc={addPerson} text={\"add\"}/>}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <PeopleDisplay personsArray={persons} deleteFunction={deletePerson} filterToSearch={filterToSearch}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicMessage\":\"NotificationMessage_basicMessage__tI7-A\",\"positiveMessage\":\"NotificationMessage_positiveMessage__1HAip NotificationMessage_basicMessage__tI7-A\",\"negativeMessage\":\"NotificationMessage_negativeMessage__2qjxn NotificationMessage_basicMessage__tI7-A\",\"positiveContainer\":\"NotificationMessage_positiveContainer__3IBI5\",\"negativeContainer\":\"NotificationMessage_negativeContainer__3sSPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"App_mainContainer__Uh7aO\"};"],"sourceRoot":""}